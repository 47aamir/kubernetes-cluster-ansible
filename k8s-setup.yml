---
- name: Setup Kubernetes Cluster
  hosts: all
  become: yes
  tasks:
    - name: Update apt and install required packages
      apt:
        update_cache: yes
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gpg
        state: present

    - name: Add Kubernetes GPG key
      command: curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      args:
        creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: Add Kubernetes repository
      apt_repository:
        repo: deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /
        state: present
        update_cache: yes

    - name: Install Kubernetes packages and Docker
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
          - docker.io
        state: present

    - name: Hold Kubernetes packages and Docker
      command: apt-mark hold kubelet kubeadm kubectl docker.io

    - name: Enable and start kubelet
      systemd:
        name: kubelet
        enabled: yes
        state: started

    - name: Enable and start Docker
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: Disable swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0

    - name: Download cri-dockerd package
      get_url:
        url: https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.13/cri-dockerd_0.3.13.3-0.ubuntu-jammy_amd64.deb
        dest: /tmp/cri-dockerd.deb

    - name: Install cri-dockerd package
      dpkg:
        name: /tmp/cri-dockerd.deb

  - name: Setup Kubernetes Master Node
    hosts: master
    become: yes
    tasks:
      - name: Pull Kubernetes control plane images
        command: kubeadm config images pull --cri-socket unix:///var/run/cri-dockerd.sock

      - name: Initialize Kubernetes cluster
        command: kubeadm init --apiserver-advertise-address {{ ansible_default_ipv4.address }} --pod-network-cidr 10.244.0.0/16 --cri-socket unix:///var/run/cri-dockerd.sock
        register: kubeadm_init

      - name: Create .kube directory
        file:
          path: /root/.kube
          state: directory
          mode: '0755'

      - name: Copy Kubernetes admin config
        copy:
          src: /etc/kubernetes/admin.conf
          dest: /root/.kube/config
          remote_src: yes
          owner: root
          group: root
          mode: '0644'

      - name: Apply Flannel network
        command: kubectl apply -f https://reweave.azurewebsites.net/k8s/v1.29/net.yaml
        environment:
          KUBECONFIG: /root/.kube/config

      - name: Generate join command
        command: kubeadm token create --print-join-command
        register: join_command

      - name: Set fact for join command
        set_fact:
          join_command: "{{ join_command.stdout }}"

  - name: Setup Kubernetes Worker Nodes
    hosts: worker
    become: yes
    tasks:
      - name: Join Kubernetes cluster
        command: "{{ hostvars['master']['join_command'] }} --cri-socket unix:///var/run/cri-dockerd.sock"
        when: hostvars['master']['join_command'] is defined
